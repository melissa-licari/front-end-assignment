{"ast":null,"code":"var _jsxFileName = \"/Users/melissalicari/Desktop/Front-End/assignment-2-melissa-licari/src/MainBody/MainBody.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { ItemContext } from \"../App\";\n\n/*add tasks and save to json file. once saved, check category of json element and print json name item as list item.\ncount each item of a category and each item overall.\nstrike through task and change iscomplete value to complete.\nbe able to edit tasks*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainBody = () => {\n  _s();\n  var {\n    tasks,\n    setTasks,\n    category,\n    setCount\n  } = useContext(ItemContext);\n  function strike(task) {\n    let n = task.name;\n    console.log(task.isCompleted);\n    console.log('here');\n    if (task.isCompleted === true) return /*#__PURE__*/_jsxDEV(\"s\", {\n      children: n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 45\n    }, this);else return n;\n  }\n  const complete = event => {\n    if (event.innerHTML.style.textDecoration) {\n      event.innerHTML.style.removeProperty('text-decoration');\n    } else {\n      event.innerHTML.style.setProperty('text-decoration', 'line-through');\n    }\n  };\n\n  /*const addTask = (x) => {\n    console.log(x)\n    tasks.push({\"category\": category, \"name\": document.getElementById('addTask').value, \"isComplete\": false});\n    if(category === \"Inbox\"){setTasks(JSON.parse(JSON.stringify(tasks)))} \n    setCount(tasks.length)}*/\n\n  const item = tasks.map((task, index) => {\n    if (task.category === category) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: index,\n          type: \"checkbox\",\n          onClick: () => {\n            if (task.isComplete === false) {\n              task.isComplete = true;\n            } else {\n              task.isComplete = false;\n            }\n            setTasks(JSON.parse(JSON.stringify(tasks)));\n          },\n          name: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), \"\\u2003\", strike(task)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"main-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"fourth\",\n        id: \"myBtn\",\n        children: [item, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"uil uil-plus\",\n          children: [\"\\u2003\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"addTask\",\n            type: \"name\",\n            placeholder: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 50\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Add Task\",\n            class: \"submit-btn\",\n            onClick: () => {\n              if (document.getElementById('addTask').value === \"\") {\n                alert(\"Your task name is empty.\");\n              } else {\n                tasks.push({\n                  \"category\": category,\n                  \"name\": document.getElementById('addTask').value,\n                  \"isComplete\": false\n                });\n                if (category === \"Inbox\") {\n                  setTasks(JSON.parse(JSON.stringify(tasks)));\n                } else if (category === \"Today\") {\n                  setTasks(JSON.parse(JSON.stringify(tasks)));\n                } else {\n                  setTasks(JSON.parse(JSON.stringify(tasks)));\n                }\n                document.getElementById('addTask').value = \"\";\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 109\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(MainBody, \"RMkjbObGyTXth2gWzqID5qBN0pU=\");\n_c = MainBody;\nexport default MainBody;\n\n/*</li><input id = \"addTask\" \n              name=\"input\" type=\"text\" placeholder=\"Add Task\" value={val} onChange={e => setValue(e.target.val)} \n              onSubmit={e => addTask(e.value)}></input>*/\nvar _c;\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"names":["React","useContext","ItemContext","MainBody","tasks","setTasks","category","setCount","strike","task","n","name","console","log","isCompleted","complete","event","innerHTML","style","textDecoration","removeProperty","setProperty","item","map","index","isComplete","JSON","parse","stringify","document","getElementById","value","alert","push"],"sources":["/Users/melissalicari/Desktop/Front-End/assignment-2-melissa-licari/src/MainBody/MainBody.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { ItemContext } from \"../App\";\n\n/*add tasks and save to json file. once saved, check category of json element and print json name item as list item.\ncount each item of a category and each item overall.\nstrike through task and change iscomplete value to complete.\nbe able to edit tasks*/\n\n\nconst MainBody = () => {\n  var { tasks, setTasks, category, setCount} =\n    useContext(ItemContext);\n    \n    function strike(task) {\n      let n = task.name\n      console.log(task.isCompleted)\n      console.log('here')\n      if(task.isCompleted === true) return (<s>{n}</s>)\n      else return (n)\n    }\n    const complete = event => {\n    if (event.innerHTML.style.textDecoration) {\n      event.innerHTML.style.removeProperty('text-decoration');\n    } else {\n      event.innerHTML.style.setProperty('text-decoration', 'line-through');\n    }\n  };\n\n/*const addTask = (x) => {\n  console.log(x)\n  tasks.push({\"category\": category, \"name\": document.getElementById('addTask').value, \"isComplete\": false});\n  if(category === \"Inbox\"){setTasks(JSON.parse(JSON.stringify(tasks)))} \n  setCount(tasks.length)}*/\n\n  const item = tasks.map((task, index) => {\n  if(task.category === category) { return(\n    <li><input id={index} type=\"checkbox\" onClick={() => {\n      if (task.isComplete === false) {\n        task.isComplete = true\n       }\n      else {\n        task.isComplete = false\n      }\n    setTasks(JSON.parse(JSON.stringify(tasks)))\n\t\t\t\t\t\t\t}}\n    name=\"check\" />&emsp;{strike(task)}</li>  )}\n    })\n\nreturn (\n    <>\n          <section id=\"main-nav\">\n          <h1>{category}</h1>\n          <ul className=\"fourth\" id=\"myBtn\">\n              {item}\n              <li className=\"uil uil-plus\">&emsp;<input id=\"addTask\" type=\"name\" placeholder=\"Add Task\" />  <input type=\"submit\" value=\"Add Task\" class=\"submit-btn\" \n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif(document.getElementById('addTask').value === \"\"){alert(\"Your task name is empty.\")}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\ttasks.push({\"category\": category, \"name\": document.getElementById('addTask').value, \"isComplete\": false});\n\t\t\t\t\t\t\t\tif(category === \"Inbox\"){setTasks(JSON.parse(JSON.stringify(tasks)))}\n\t\t\t\t\t\t\t\telse if(category === \"Today\"){setTasks(JSON.parse(JSON.stringify(tasks)))}\n\t\t\t\t\t\t\t\telse{setTasks(JSON.parse(JSON.stringify(tasks)))}\n\t\t\t\t\t\t\t\tdocument.getElementById('addTask').value = \"\"\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}}/></li>\n          </ul>\n      </section>\n    </>\n  );\n};\n\nexport default MainBody;\n\n\n/*</li><input id = \"addTask\" \n              name=\"input\" type=\"text\" placeholder=\"Add Task\" value={val} onChange={e => setValue(e.target.val)} \n              onSubmit={e => addTask(e.value)}></input>*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}