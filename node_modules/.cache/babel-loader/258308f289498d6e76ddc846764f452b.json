{"ast":null,"code":"var _jsxFileName = \"/Users/melissalicari/Desktop/Front-End/assignment-2-melissa-licari/src/MainBody/MainBody.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { ItemContext } from \"../App\";\n\n/*add tasks and save to json file. once saved, check category of json element and print json name item as list item.\ncount each item of a category and each item overall.\nstrike through task and change iscomplete value to complete.\nbe able to edit tasks*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainBody = () => {\n  _s();\n  var {\n    tasks,\n    setTasks,\n    category,\n    setCount\n  } = useContext(ItemContext);\n  const [value, setValue] = useState(\"\");\n  const complete = event => {\n    if (event.innerHTML.style.textDecoration) {\n      event.innerHTML.style.removeProperty('text-decoration');\n    } else {\n      event.innerHTML.style.setProperty('text-decoration', 'line-through');\n    }\n  };\n  const addTask = value => {\n    console.log(value);\n    setTasks(tasks, {\n      \"category\": category,\n      \"name\": value,\n      \"isComplete\": false\n    });\n    setCount(tasks.length);\n  };\n  const item = tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: complete,\n      id: \"check\",\n      name: \"check\",\n      value: \"check\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), \"\\u2003\", task.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"main-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"fourth\",\n        id: \"myBtn\",\n        children: [item, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"uil uil-plus\",\n          children: [\"\\u2003\", /*#__PURE__*/_jsxDEV(\"form\", {\n            name: \"inputForm\",\n            onSubmit: addTask(value),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"addTask\",\n              name: \"input\",\n              type: \"text\",\n              placeholder: \"Add Task\",\n              value: value,\n              onChange: e => setValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 99\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(MainBody, \"xdFUs6YyeGioVWxCWhgJuL4Xd+0=\");\n_c = MainBody;\nexport default MainBody;\nvar _c;\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"names":["React","useContext","useState","ItemContext","MainBody","tasks","setTasks","category","setCount","value","setValue","complete","event","innerHTML","style","textDecoration","removeProperty","setProperty","addTask","console","log","length","item","map","task","index","name","e","target"],"sources":["/Users/melissalicari/Desktop/Front-End/assignment-2-melissa-licari/src/MainBody/MainBody.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { ItemContext } from \"../App\";\n\n/*add tasks and save to json file. once saved, check category of json element and print json name item as list item.\ncount each item of a category and each item overall.\nstrike through task and change iscomplete value to complete.\nbe able to edit tasks*/\n\n\nconst MainBody = () => {\n  var { tasks, setTasks, category, setCount} =\n    useContext(ItemContext);\n  \n  const [value, setValue] = useState(\"\");\n  \n    const complete = event => {\n    if (event.innerHTML.style.textDecoration) {\n      event.innerHTML.style.removeProperty('text-decoration');\n    } else {\n      event.innerHTML.style.setProperty('text-decoration', 'line-through');\n    }\n  };\n\nconst addTask = (value) => {\n  console.log(value)\n  setTasks(tasks,{\"category\": category, \"name\": value, \"isComplete\": false})\n  setCount(tasks.length)}\n\n  const item = tasks.map((task, index) => \n    <li><input key={index} type=\"checkbox\" onClick={complete} id=\"check\" name=\"check\" value=\"check\" />&emsp;{task.name}</li>)  \n\n\nreturn (\n    <>\n          <section id=\"main-nav\">\n          <h1>{category}</h1>\n          <ul className=\"fourth\" id=\"myBtn\">\n              {item}\n              <li className=\"uil uil-plus\">&emsp;<form name=\"inputForm\" onSubmit={addTask(value)}><input id = \"addTask\" name=\"input\" type=\"text\" placeholder=\"Add Task\" value={value} onChange={e => setValue(e.target.value)}></input></form></li>\n          </ul>\n      </section>\n    </>\n  );\n};\n\nexport default MainBody;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,QAAQ;;AAEpC;AACA;AACA;AACA;AAHA;AAAA;AAMA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,IAAI;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GACxCP,UAAU,CAACE,WAAW,CAAC;EAEzB,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,QAAQ,GAAGC,KAAK,IAAI;IAC1B,IAAIA,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,cAAc,EAAE;MACxCH,KAAK,CAACC,SAAS,CAACC,KAAK,CAACE,cAAc,CAAC,iBAAiB,CAAC;IACzD,CAAC,MAAM;MACLJ,KAAK,CAACC,SAAS,CAACC,KAAK,CAACG,WAAW,CAAC,iBAAiB,EAAE,cAAc,CAAC;IACtE;EACF,CAAC;EAEH,MAAMC,OAAO,GAAIT,KAAK,IAAK;IACzBU,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;IAClBH,QAAQ,CAACD,KAAK,EAAC;MAAC,UAAU,EAAEE,QAAQ;MAAE,MAAM,EAAEE,KAAK;MAAE,YAAY,EAAE;IAAK,CAAC,CAAC;IAC1ED,QAAQ,CAACH,KAAK,CAACgB,MAAM,CAAC;EAAA,CAAC;EAEvB,MAAMC,IAAI,GAAGjB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC;IAAA,wBAAI;MAAmB,IAAI,EAAC,UAAU;MAAC,OAAO,EAAEd,QAAS;MAAC,EAAE,EAAC,OAAO;MAAC,IAAI,EAAC,OAAO;MAAC,KAAK,EAAC;IAAO,GAA/Ec,KAAK;MAAA;MAAA;MAAA;IAAA,QAA6E,YAAOD,IAAI,CAACE,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM,CAAC;EAG7H,oBACI;IAAA,uBACM;MAAS,EAAE,EAAC,UAAU;MAAA,wBACtB;QAAA,UAAKnB;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnB;QAAI,SAAS,EAAC,QAAQ;QAAC,EAAE,EAAC,OAAO;QAAA,WAC5Be,IAAI,eACL;UAAI,SAAS,EAAC,cAAc;UAAA,kCAAO;YAAM,IAAI,EAAC,WAAW;YAAC,QAAQ,EAAEJ,OAAO,CAACT,KAAK,CAAE;YAAA,uBAAC;cAAO,EAAE,EAAG,SAAS;cAAC,IAAI,EAAC,OAAO;cAAC,IAAI,EAAC,MAAM;cAAC,WAAW,EAAC,UAAU;cAAC,KAAK,EAAEA,KAAM;cAAC,QAAQ,EAAEkB,CAAC,IAAIjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACnB,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACpO;IAAA;MAAA;MAAA;MAAA;IAAA;EACC,iBACT;AAEP,CAAC;AAAC,GAlCIL,QAAQ;AAAA,KAARA,QAAQ;AAoCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}