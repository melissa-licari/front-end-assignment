{"ast":null,"code":"var _jsxFileName = \"/Users/melissalicari/Desktop/Front-End/assignment-2-melissa-licari/src/MainBody/MainBody.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { ItemContext } from \"../App\";\n\n/*add tasks and save to json file. once saved, check category of json element and print json name item as list item.\ncount each item of a category and each item overall.\nstrike through task and change iscomplete value to complete.\nbe able to edit tasks*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainBody = () => {\n  _s();\n  var {\n    val,\n    setValue,\n    tasks,\n    setTasks,\n    category,\n    setCount\n  } = useContext(ItemContext);\n  const complete = event => {\n    if (event.innerHTML.style.textDecoration) {\n      event.innerHTML.style.removeProperty('text-decoration');\n    } else {\n      event.innerHTML.style.setProperty('text-decoration', 'line-through');\n    }\n  };\n  const addTask = x => {\n    console.log(x);\n    setTasks(JSON.parse(JSON.stringify(x)));\n    tasks.push({\n      \"category\": category,\n      \"name\": document.getElementById('addTask').value,\n      \"isComplete\": false\n    });\n    if (category == \"Inbox\") {\n      setTasks(JSON.parse(JSON.stringify(tasks)));\n    }\n    //setTasks(tasks,{\"category\": category, \"name\": x, \"isComplete\": false})\n    setCount(tasks.length);\n  };\n  const item = tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onClick: complete,\n      id: \"check\",\n      name: \"check\",\n      value: \"check\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), \"\\u2003\", task.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"main-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"fourth\",\n        id: \"myBtn\",\n        children: [item, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"uil uil-plus\",\n          children: [\"\\u2003\", /*#__PURE__*/_jsxDEV(\"form\", {\n            name: \"inputForm\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"addTask\",\n              name: \"input\",\n              type: \"text\",\n              placeholder: \"Add Task\",\n              value: val,\n              onChange: e => setValue(e.target.val),\n              onSubmit: e => addTask(e.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(MainBody, \"Mae2y8rEqXhC9EpLlDXQ+ZlsNQo=\");\n_c = MainBody;\nexport default MainBody;\nvar _c;\n$RefreshReg$(_c, \"MainBody\");","map":{"version":3,"names":["React","useContext","ItemContext","MainBody","val","setValue","tasks","setTasks","category","setCount","complete","event","innerHTML","style","textDecoration","removeProperty","setProperty","addTask","x","console","log","JSON","parse","stringify","push","document","getElementById","value","length","item","map","task","index","name","e","target"],"sources":["/Users/melissalicari/Desktop/Front-End/assignment-2-melissa-licari/src/MainBody/MainBody.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { ItemContext } from \"../App\";\n\n/*add tasks and save to json file. once saved, check category of json element and print json name item as list item.\ncount each item of a category and each item overall.\nstrike through task and change iscomplete value to complete.\nbe able to edit tasks*/\n\n\nconst MainBody = () => {\n  var { val,setValue, tasks, setTasks, category, setCount} =\n    useContext(ItemContext);\n\n    const complete = event => {\n    if (event.innerHTML.style.textDecoration) {\n      event.innerHTML.style.removeProperty('text-decoration');\n    } else {\n      event.innerHTML.style.setProperty('text-decoration', 'line-through');\n    }\n  };\n\nconst addTask = (x) => {\n  console.log(x)\n  setTasks(JSON.parse(JSON.stringify(x)));\n  tasks.push({\"category\": category, \"name\": document.getElementById('addTask').value, \"isComplete\": false});\n  if(category == \"Inbox\"){setTasks(JSON.parse(JSON.stringify(tasks)))} \n  //setTasks(tasks,{\"category\": category, \"name\": x, \"isComplete\": false})\n  setCount(tasks.length)}\n\n  const item = tasks.map((task, index) => \n    <li><input key={index} type=\"checkbox\" onClick={complete} id=\"check\" name=\"check\" value=\"check\" />&emsp;{task.name}</li>)  \n\n\nreturn (\n    <>\n          <section id=\"main-nav\">\n          <h1>{category}</h1>\n          <ul className=\"fourth\" id=\"myBtn\">\n              {item}\n              <li className=\"uil uil-plus\">&emsp;<form name=\"inputForm\" ><input id = \"addTask\" \n              name=\"input\" type=\"text\" placeholder=\"Add Task\" value={val} onChange={e => setValue(e.target.val)} \n              onSubmit={e => addTask(e.value)}></input></form></li>\n          </ul>\n      </section>\n    </>\n  );\n};\n\nexport default MainBody;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,QAAQ;;AAEpC;AACA;AACA;AACA;AAHA;AAAA;AAMA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,IAAI;IAAEC,GAAG;IAACC,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GACtDR,UAAU,CAACC,WAAW,CAAC;EAEvB,MAAMQ,QAAQ,GAAGC,KAAK,IAAI;IAC1B,IAAIA,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,cAAc,EAAE;MACxCH,KAAK,CAACC,SAAS,CAACC,KAAK,CAACE,cAAc,CAAC,iBAAiB,CAAC;IACzD,CAAC,MAAM;MACLJ,KAAK,CAACC,SAAS,CAACC,KAAK,CAACG,WAAW,CAAC,iBAAiB,EAAE,cAAc,CAAC;IACtE;EACF,CAAC;EAEH,MAAMC,OAAO,GAAIC,CAAC,IAAK;IACrBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACdX,QAAQ,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,CAAC,CAAC,CAAC,CAAC;IACvCZ,KAAK,CAACkB,IAAI,CAAC;MAAC,UAAU,EAAEhB,QAAQ;MAAE,MAAM,EAAEiB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK;MAAE,YAAY,EAAE;IAAK,CAAC,CAAC;IACzG,IAAGnB,QAAQ,IAAI,OAAO,EAAC;MAACD,QAAQ,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACjB,KAAK,CAAC,CAAC,CAAC;IAAA;IACnE;IACAG,QAAQ,CAACH,KAAK,CAACsB,MAAM,CAAC;EAAA,CAAC;EAEvB,MAAMC,IAAI,GAAGvB,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjC;IAAA,wBAAI;MAAmB,IAAI,EAAC,UAAU;MAAC,OAAO,EAAEtB,QAAS;MAAC,EAAE,EAAC,OAAO;MAAC,IAAI,EAAC,OAAO;MAAC,KAAK,EAAC;IAAO,GAA/EsB,KAAK;MAAA;MAAA;MAAA;IAAA,QAA6E,YAAOD,IAAI,CAACE,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM,CAAC;EAG7H,oBACI;IAAA,uBACM;MAAS,EAAE,EAAC,UAAU;MAAA,wBACtB;QAAA,UAAKzB;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM,eACnB;QAAI,SAAS,EAAC,QAAQ;QAAC,EAAE,EAAC,OAAO;QAAA,WAC5BqB,IAAI,eACL;UAAI,SAAS,EAAC,cAAc;UAAA,kCAAO;YAAM,IAAI,EAAC,WAAW;YAAA,uBAAE;cAAO,EAAE,EAAG,SAAS;cAChF,IAAI,EAAC,OAAO;cAAC,IAAI,EAAC,MAAM;cAAC,WAAW,EAAC,UAAU;cAAC,KAAK,EAAEzB,GAAI;cAAC,QAAQ,EAAE8B,CAAC,IAAI7B,QAAQ,CAAC6B,CAAC,CAACC,MAAM,CAAC/B,GAAG,CAAE;cAClG,QAAQ,EAAE8B,CAAC,IAAIjB,OAAO,CAACiB,CAAC,CAACP,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACpD;IAAA;MAAA;MAAA;MAAA;IAAA;EACC,iBACT;AAEP,CAAC;AAAC,GArCIxB,QAAQ;AAAA,KAARA,QAAQ;AAuCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}